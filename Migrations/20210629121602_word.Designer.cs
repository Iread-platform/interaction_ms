// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using iread_interaction_ms.DataAccess.Data;

namespace iread_interaction_ms.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210629121602_word")]
    partial class word
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("iread_interaction_ms.DataAccess.Data.Entity.Audio", b =>
                {
                    b.Property<int>("AudioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AttachmentId")
                        .HasColumnType("int");

                    b.Property<int>("InteractionId")
                        .HasColumnType("int");

                    b.HasKey("AudioId");

                    b.HasIndex("InteractionId");

                    b.ToTable("Audios");
                });

            modelBuilder.Entity("iread_interaction_ms.DataAccess.Data.Entity.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CommentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("InteractionId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WordTimesTamp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CommentId");

                    b.HasIndex("InteractionId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("iread_interaction_ms.DataAccess.Data.Entity.Interaction", b =>
                {
                    b.Property<int>("InteractionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.Property<int>("StoryId")
                        .HasColumnType("int");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("InteractionId");

                    b.ToTable("Interactions");
                });

            modelBuilder.Entity("iread_interaction_ms.DataAccess.Data.Entity.Audio", b =>
                {
                    b.HasOne("iread_interaction_ms.DataAccess.Data.Entity.Interaction", "Interaction")
                        .WithMany()
                        .HasForeignKey("InteractionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interaction");
                });

            modelBuilder.Entity("iread_interaction_ms.DataAccess.Data.Entity.Comment", b =>
                {
                    b.HasOne("iread_interaction_ms.DataAccess.Data.Entity.Interaction", "Interaction")
                        .WithMany()
                        .HasForeignKey("InteractionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interaction");
                });
#pragma warning restore 612, 618
        }
    }
}
